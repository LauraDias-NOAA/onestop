plugins {
  id 'com.github.blindpirate.gogradle' version '0.11.4'
  id 'com.google.cloud.tools.jib' version '1.6.1'
  id 'java'
}

golang {
  packagePath = 'github.com/cedardevs/onestop/cli/cmd/onestop' // go import path of project to be built, NOT local file system path!
}

goBuild {

  targetPlatform = ['linux-amd64', 'darwin-amd64']
}

dependencies {
    golang {
        build(['name':'github.com/danielgtaylor/openapi-cli-generator'])
        build(['name':'github.com/pkg/errors'])
        build(['name':'github.com/rs/zerolog'])
        build(['name':'github.com/spf13/cobra'])
        build(['name':'github.com/spf13/viper'])
        build(['name':'gopkg.in/h2non/gentleman.v2'])
    }
}

jib {
  // derive image repository
  String imageRegistryURL = "registry.hub.docker.com"
  String imageNamespace = "cedardevs"
  String imageName = "${rootProject.name}-${project.name}".toString()
  String imageTag = "${project.version}".toString()
  String imageRepository = "${imageRegistryURL}/${imageNamespace}/${imageName}:${imageTag}".toString()

  from {
    // base image
    image = 'golang'
  }

  to {
    image = imageRepository
    auth {
      username = System.getenv('DOCKER_USER').toString().trim()
      password = System.getenv('DOCKER_PASSWORD').toString().trim()
    }
  }

  extraDirectories {
    paths = ["${projectDir}/.gogradle".toString(), "${projectDir}".toString()]
    permissions = [
      '/cli-linux-amd64': '755',
      '/scdr-files.config.yaml' : '555'
      ]
  }

  container {
    labels = [
        'org.label-schema.build-date': project.buildDate.toString(),
        'org.label-schema.name': imageName,
        'org.label-schema.description': 'A CLI for the OneStop API.',
        'org.label-schema.vcs-url': project.getVcsUrl().toString(),
        'org.label-schema.vcs-ref': project.getVcsRef().toString(),
        'org.label-schema.vendor': imageNamespace,
        'org.label-schema.version': imageTag,
        'org.label-schema.schema-version': '1.0',
    ]
    // mainClass = 'main.go'
    entrypoint = '/cli-linux-amd64'
    creationTime = project.buildDate.toString()
  }
}
tasks.jib.dependsOn 'goBuild'
tasks.jibDockerBuild.dependsOn 'goBuild'

build {
    dependsOn 'goBuild'
}

clean {
    delete "${projectDir}/.gogradle"
}
//move config into .gogradle so it is moved during extraDirectories step.
task copyConfigFile(type: Copy) {
  from file('scdr-files-config.yaml')
  into file('.gogradle/')
}
tasks.jib.dependsOn copyConfigFile
