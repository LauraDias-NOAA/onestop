openapi: 3.0.0
servers:
  - url: 'https://sciapps.colorado.edu/onestop-search'
    description: Development test server (uses test data)
  - url: 'https://data.noaa.gov/onestop-search'
    description: NOAA OneStop
info:
  title: OneStop Search API
  description: 'Search Collections and Granules! More information on search request and responses available at [Search API Requests](https://github.com/cedardevs/onestop/wiki/OneStop-Search-API-Requests) and [Search API Responses](https://github.com/cedardevs/onestop/wiki/OneStop-Search-API-Responses).'
  version: 2.4.0
tags:
  - name: collection
    description: Discover available collections of data.
  - name: granule
    description: Discover available files of data.
  - name: flattened-granule
    description: Flattened granules are a representation of the granules which inherit all the metadata from the parent collection.
paths:
  /collection:
    head:
      operationId: headCollection
      tags:
        - collection
      summary: Get Collection Info
      responses:
        '200':
          description: Successful operation
    get:
      operationId: getCollection
      tags:
        - collection
      summary: Get Collection Info
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collectionInfoResponse'
  /collection/{id}:
    head:
      operationId: headCollectionById
      tags:
        - collection
      summary: Collection by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the collection
      responses:
        '200':
          description: Successful operation
        '404':
          description: Request Parsing Error
    get:
      operationId: getCollectionById
      tags:
        - collection
      summary: Collection by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the collection
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getByIdResponse'
        '404':
          description: Request Parsing Error
  /search/collection:
    post:
      operationId: searchCollection
      tags:
        - collection
      summary: Retrieve collection metadata
      description: 'Retrieve collection metadata records matching the text query string, spatial, and/or temporal filter.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
            examples:
              payload0:
                $ref: '#/components/examples/payload0'
              payload1:
                $ref: '#/components/examples/payload1'
              payload2:
                $ref: '#/components/examples/payload2'
              payload3:
                $ref: '#/components/examples/payload3'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchResponse'
        '400':
          description: Bad Request
  /granule:
    head:
      operationId: headGranule
      tags:
        - granule
      summary: Get Granule Info
      responses:
        '200':
          description: Successful operation
    get:
      operationId: getGranule
      tags:
        - granule
      summary: Get Granule Info
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/granuleInfoResponse'
  /granule/{id}:
    head:
      operationId: headGranuleById
      tags:
        - granule
      summary: Granule by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the granule
      responses:
        '200':
          description: Successful operation
        '404':
          description: Request Parsing Error
    get:
      operationId: getGranuleById
      tags:
        - granule
      summary: Granule by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the granule
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getByIdResponse'
        '404':
          description: Request Parsing Error
  /search/granule:
    post:
      operationId: searchGranule
      tags:
        - granule
      summary: Retrieve granule metadata
      description: 'Retrieve granule metadata records matching the text query string, spatial, and/or temporal filter.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchResponse'
        '400':
          description: Bad Request
  /flattened-granule:
    head:
      operationId: headFlattenedGranule
      tags:
        - flattened-granule
      summary: Get Flattened Granule Info
      responses:
        '200':
          description: Successful operation
    get:
      operationId: getFlattenedGranule
      tags:
        - flattened-granule
      summary: Get Flattened Granule Info
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/granuleInfoResponse'
  /flattened-granule/{id}:
    head:
      operationId: headFlattenedGranuleById
      tags:
        - flattened-granule
      summary: Flattened Granule by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the flattened granule
      responses:
        '200':
          description: Successful operation
        '404':
          description: Request Parsing Error
    get:
      operationId: getFlattenedGranuleById
      tags:
        - flattened-granule
      summary: Flattened Granule by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the flattened granule
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getByIdResponse'
        '404':
          description: Request Parsing Error
  /search/flattened-granule:
    post:
      operationId: searchFlattenedGranule
      tags:
        - flattened-granule
      summary: Retrieve flattened granule metadata
      description: 'Retrieve flattened granule metadata records matching the text query string, spatial, and/or temporal filter.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestBody'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchResponse'
        '400':
          description: Bad Request

components:
  schemas:
    LineString:
      properties:
        coordinates:
          $ref: "#/components/schemas/lineString"
        type:
          enum:
            - LineString
      required:
        - type
        - coordinates
    MultiLineString:
      properties:
        coordinates:
          items:
            $ref: "#/components/schemas/lineString"
          type: array
        type:
          enum:
            - MultiLineString
      required:
        - type
        - coordinates
    MultiPoint:
      properties:
        coordinates:
          $ref: "#/components/schemas/positionArray"
        type:
          enum:
            - MultiPoint
      required:
        - type
        - coordinates
    MultiPolygon:
      properties:
        coordinates:
          items:
            $ref: "#/components/schemas/polygon"
          type: array
        type:
          enum:
            - MultiPolygon
      required:
        - type
        - coordinates
    Point:
      properties:
        coordinates:
          $ref: "#/components/schemas/position"
        type:
          enum:
            - Point
      required:
        - type
        - coordinates
      type: object
    Polygon:
      properties:
        coordinates:
          $ref: "#/components/schemas/polygon"
        type:
          enum:
            - Polygon
      required:
        - type
        - coordinates
    accessFeeStatement:
      type: string
    beginDate:
      format: date
      type: string
    beginYear:
      format: date
      type: string
    citeAsStatements:
      items:
        type: string
      type: array
    collectionFilter:
      additionalProperties: false
      description: "Filter granules by specific collection(s). If multiple collection filters are used, or multiple values in a single collection filter, then the search is performed with a logical OR."
      properties:
        type:
          description: "Filter type."
          enum:
            - collection
        values:
          description: "List of collection UUIDs."
          items:
            description: "Collection UUID"
            type: string
          type: array
      required:
        - type
        - values
      title: "Collection Filter"
      type: object
    collectionMetadataObject:
      properties:
        totalGranules:
          type: integer
      type: object
    crossReferences:
      items:
        properties:
          date:
            type: string
          links:
            $ref: "#/components/schemas/links"
          title:
            type: string
        required:
          - date
          - links
          - title
        type: object
      type: array
    dataFormat:
      items:
        pattern: ^(.*)$
        type: string
      type: array
    dataFormats:
      items:
        properties:
          name:
            pattern: ^(.*)$
            type: string
          version:
            type: string
        required:
          - name
          - version
        type: object
      type: array
    dateTimeFilter:
      additionalProperties: false
      description: "Filter results by before, after, or a date range."
      properties:
        after:
          description: "Beginning of the date range, e.g., look for all results *after* this date."
          format: date-time
          type: string
        before:
          description: "End of the date range, e.g., look for all results *before* this date."
          format: date-time
          type: string
        relation:
          default: intersects
          description: "How the result time range relates to the query time range, e.g., return all datasets whose time range is within the given time range."
          enum:
            - contains
            - disjoint
            - intersects
            - within
        type:
          description: "Filter type."
          enum:
            - datetime
      required:
        - type
      title: "Datetime Filter"
      type: object
    description:
      type: string
    doi:
      type: string
    dsmmAverage:
      default: 0
      type: number
    edition:
      type: string
    endYear:
      format: date
      type: string
    excludeGlobalFilter:
      additionalProperties: false
      description: "Flag to request that geospatially global results be excluded. Defaults to false if not provided."
      properties:
        type:
          description: "Filter type."
          enum:
            - excludeGlobal
        value:
          default: false
          type: boolean
      required:
        - type
        - value
      title: "Exclude Global Filter"
      type: object
    facetFilter:
      additionalProperties: false
      description: "Filters results based on given terms (data formats, link protocols, service link protocols, GCMD keywords) where returned results MUST have the specified term values. Multiple facetFilter objects will be combined with logical AND; multiple values in a single facetFilter object will be combined with the logical OR."
      properties:
        name:
          description: "One of the following: 'dataFormats', 'linkProtocols', 'serviceLinkProtocols', or GCMD keyword categories ('science', 'services', 'locations', 'instruments', 'platforms', 'projects', 'dataCenters', 'horizontalResolution', 'verticalResolution', 'temporalResolution')."
          enum:
            - dataFormats
            - linkProtocols
            - serviceLinkProtocols
            - science
            - services
            - locations
            - instruments
            - platforms
            - projects
            - dataCenters
            - horizontalResolution
            - verticalResolution
            - temporalResolution
        type:
          description: "Filter type."
          enum:
            - facet
        values:
          description: "List of terms to match"
          items:
            description: "Exact match data format(s) (e.g. - \"NETCDF\"), link or service link protocol(s) (e.g. - \"ftp\"), or GCMD keyword(s) (e.g. - \"Atmosphere > Atmospheric Temperature > Surface Temperature\")"
            type: string
          type: array
      required:
        - type
        - name
        - values
      title: "Facet Filter"
      type: object
    fileIdentifier:
      pattern: ^(.*)$
      type: string
    getByIdResponse:
      description: Full records for matching item
      properties:
        data:
          items:
            $ref: "#/components/schemas/searchDataFullObject"
          type: array
        # meta:
        #   $ref: "#/components/schemas/collectionMetadataObject"
      type: object
    gcmdDataCenters:
      items:
        pattern: ^(.*)$
        type: string
      type: array
    gcmdHorizontalResolution:
      type: array
    gcmdInstruments:
      items:
        pattern: ^(.*)$
        type: string
      type: array
    gcmdLocations:
      items:
        pattern: ^(.*)$
        type: string
      type: array
    gcmdPlatforms:
      items:
        pattern: ^(.*)$
        type: string
      type: array
    gcmdProjects:
      items:
        pattern: ^(.*)$
        type: string
      type: array
    gcmdScience:
      items:
        pattern: ^(.*)$
        type: string
      type: array
    gcmdScienceServices:
      type: array
    gcmdTemporalResolution:
      type: array
    gcmdVerticalResolution:
      type: array
    geometry:
      description: "One geometry as defined by GeoJSON. Can be a point, multipoint, linestring, mutlilinestring, polygon, or multipolygon."
      oneOf:
        - $ref: "#/components/schemas/Point"
        - $ref: "#/components/schemas/MultiPoint"
        - $ref: "#/components/schemas/LineString"
        - $ref: "#/components/schemas/MultiLineString"
        - $ref: "#/components/schemas/Polygon"
        - $ref: "#/components/schemas/MultiPolygon"
      title: Geometry
    geometryFilter:
      additionalProperties: false
      description: "Filter that returns results whose bounding geometry contains the specified geographical coordinate."
      properties:
        geometry:
          $ref: "#/components/schemas/geometry"
        relation:
          default: intersects
          description: "How the result geometry relates to the query geometry, e.g., return all datasets whose geometry contains the given point."
          enum:
            - contains
            - disjoint
            - intersects
            - within
        type:
          description: "Filter type."
          enum:
            - geometry
      required:
        - type
        - geometry
      title: "Geometry Filter"
      type: object
    individualNames:
      items:
        pattern: ^(.*)$
        type: string
      type: array
    collectionInfoResponse:
      additionalProperties: false
      description: "High-level information on a resource."
      properties:
        data:
          items:
            $ref: '#/components/schemas/responseItem'
          type: array
        meta:
          $ref : '#/components/schemas/collectionMetadataObject'
      type: object
    granuleInfoResponse:
      additionalProperties: false
      description: "High-level information on a resource."
      properties:
        data:
          items:
            $ref: '#/components/schemas/responseItem'
          type: array
      type: object
    internalParentIdentifier:
      pattern: ^(.*)$
      type: string
    isGlobal:
      default: false
      type: boolean
    keywords:
      items:
        pattern: ^(.*)$
        type: string
      type: array
    largerWorks:
      type: array
    legalConstraints:
      items:
        pattern: ^(.*)$
        type: string
      type: array
    lineString:
      allOf:
        - $ref: "#/components/schemas/positionArray"
        - minItems: 2
      description: "An array of two or more positions"
    linearRing:
      allOf:
        - $ref: "#/components/schemas/positionArray"
        - minItems: 4
      description: "An array of four positions where the first equals the last"
    link:
      properties:
        linkDescription:
          type: string
        linkFunction:
          type: string
        linkName:
          type: string
        linkProtocol:
          type: string
        linkUrl:
          type: string
      type: object
    linkProtocol:
      items:
        pattern: ^(.*)$
        type: string
      type: array
    links:
      items:
        oneOf:
          -
            $ref: "#/components/schemas/link"
      type: array
    orderingInstructions:
      type: string
    organizationNames:
      items:
        pattern: ^(.*)$
        type: string
      type: array
    page:
      description: "Result page"
      properties:
        max:
          default: 10
          description: "Maximum number of results returned."
          maximum: 1000
          minimum: 0
          type: integer
        offset:
          default: 0
          description: "Number of records by which to offset results."
          type: number
      type: object
    parentIdentifier:
      pattern: ^(.*)$
      type: string
    polygon:
      description: "An array of linear rings"
      items:
        $ref: "#/components/schemas/linearRing"
      type: array
    position:
      description: "A single position"
      items:
        description: coordinate
        type: number
      maxItems: 2
      minItems: 2
    positionArray:
      description: "An array of positions"
      items:
        $ref: "#/components/schemas/position"
      type: array
    requestBody:
      additionalProperties: false
      description: "The shape of a search request body that can be sent to the OneStop API to execute a search against available metadata. Collections are returned by default unless a collection filter is included, resulting in granules being returned."
      properties:
        facets:
          default: false
          description: "Flag to request counts of results by GCMD keywords in addition to results."
          type: boolean
        filters:
          items:
            anyOf:
              - $ref: "#/components/schemas/dateTimeFilter"
              - $ref: "#/components/schemas/yearFilter"
              - $ref: "#/components/schemas/facetFilter"
              - $ref: "#/components/schemas/geometryFilter"
              - $ref: "#/components/schemas/collectionFilter"
              - $ref: "#/components/schemas/excludeGlobalFilter"
          type: array
        page:
          $ref: "#/components/schemas/page"
        queries:
          items:
            oneOf:
              - $ref: "#/components/schemas/textQuery"
          type: array
        summary:
          default: true
          description: "Flag to request summary of search results instead of full set of attributes."
          type: boolean
      title: "Search Request"
      type: object
    responseItem:
      additionalProperties: false
      properties:
        count:
          type: integer
        id:
          enum:
            - collection
            - granule
          type: string
        type:
          enum:
            - count
          type: string
      type: object
    searchDataFullObject:
      properties:
        attributes:
          properties:
            accessFeeStatement:
              $ref: "#/components/schemas/accessFeeStatement"
            beginDate:
              $ref: "#/components/schemas/beginDate"
            beginYear:
              $ref: "#/components/schemas/beginYear"
            citeAsStatements:
              $ref: "#/components/schemas/citeAsStatements"
            crossReferences:
              $ref: "#/components/schemas/crossReferences"
            dataFormat:
              $ref: "#/components/schemas/dataFormat"
            dataFormats:
              $ref: "#/components/schemas/dataFormats"
            description:
              $ref: "#/components/schemas/description"
            doi:
              $ref: "#/components/schemas/doi"
            dsmmAverage:
              $ref: "#/components/schemas/dsmmAverage"
            edition:
              $ref: "#/components/schemas/edition"
            endYear:
              $ref: "#/components/schemas/endYear"
            fileIdentifier:
              $ref: "#/components/schemas/fileIdentifier"
            gcmdDataCenters:
              $ref: "#/components/schemas/gcmdDataCenters"
            gcmdHorizontalResolution:
              $ref: "#/components/schemas/gcmdHorizontalResolution"
            gcmdInstruments:
              $ref: "#/components/schemas/gcmdInstruments"
            gcmdLocations:
              $ref: "#/components/schemas/gcmdLocations"
            gcmdPlatforms:
              $ref: "#/components/schemas/gcmdPlatforms"
            gcmdProjects:
              $ref: "#/components/schemas/gcmdProjects"
            gcmdScience:
              $ref: "#/components/schemas/gcmdScience"
            gcmdScienceServices:
              $ref: "#/components/schemas/gcmdScienceServices"
            gcmdTemporalResolution:
              $ref: "#/components/schemas/gcmdTemporalResolution"
            gcmdVerticalResolution:
              $ref: "#/components/schemas/gcmdVerticalResolution"
            individualNames:
              $ref: "#/components/schemas/individualNames"
            internalParentIdentifier:
              $ref: "#/components/schemas/internalParentIdentifier"
            isGlobal:
              $ref: "#/components/schemas/isGlobal"
            keywords:
              $ref: "#/components/schemas/keywords"
            largerWorks:
              $ref: "#/components/schemas/largerWorks"
            legalConstraints:
              $ref: "#/components/schemas/legalConstraints"
            linkProtocol:
              $ref: "#/components/schemas/linkProtocol"
            links:
              $ref: "#/components/schemas/links"
            orderingInstructions:
              $ref: "#/components/schemas/orderingInstructions"
            organizationNames:
              $ref: "#/components/schemas/organizationNames"
            parentIdentifier:
              $ref: "#/components/schemas/parentIdentifier"
            serviceLinkProtocol:
              $ref: "#/components/schemas/serviceLinkProtocol"
            serviceLinks:
              $ref: "#/components/schemas/serviceLinks"
            spatialBounding:
              $ref: "#/components/schemas/geometry"
            stagedDate:
              $ref: "#/components/schemas/stagedDate"
            thumbnail:
              $ref: "#/components/schemas/thumbnail"
            title:
              $ref: "#/components/schemas/title"
            useLimitation:
              $ref: "#/components/schemas/useLimitation"
          type: object
      required:
        - attributes
        - id
        - type
      type: object
    searchDataSummaryObject:
      properties:
        attributes:
          description: "Summary of the result. If search specified summary:false, this could be the entire result instead."
          properties:
            beginYear:
              $ref: "#/components/schemas/beginYear"
            citeAsStatements:
              $ref: "#/components/schemas/citeAsStatements"
            endYear:
              $ref: "#/components/schemas/endYear"
            links:
              $ref: "#/components/schemas/links"
            serviceLinks:
              $ref: "#/components/schemas/serviceLinks"
            spatialBounding:
              $ref: "#/components/schemas/geometry"
            thumbnail:
              $ref: "#/components/schemas/thumbnail"
            title:
              $ref: "#/components/schemas/title"
        id:
          description: "internal uuid"
          type: string
        type:
          enum:
            - collection
            - granule
            - flattened-granule
          type: string
      type: object
    searchMetadataObject:
      properties:
        facets:
          description: "included if search request specified facets:true"
          type: object
        took:
          type: integer
        total:
          description: "total number of results matching the search"
          type: integer
      type: object
    searchResponse:
      description: "Search Results"
      properties:
        data:
          items:
            oneOf:
              - $ref: "#/components/schemas/searchDataSummaryObject"
              - $ref: "#/components/schemas/searchDataFullObject"
          type: array
        meta:
          $ref: "#/components/schemas/searchMetadataObject"
      type: object
    serviceLinkProtocol:
      type: array
    serviceLinks:
      properties:
        alternateTitle:
          type: string
        description:
          type: string
        links:
          items:
            $ref: "#/components/schemas/link"
          type: array
        title:
          type: string
      type: object
    stagedDate:
      type: integer
    textQuery:
      additionalProperties: false
      description: "When providing multiple queryText objects in your search request, keep in mind that they will be combined with a logical AND. Terms use Lucene Query Syntax."
      properties:
        type:
          description: "Filter type."
          enum:
            - queryText
        value:
          description: "Text query to search with that is valid so long as it does not have a leading wildcard ('*' or '?')"
          pattern: "^(?!\\s*[\\*\\?]+).*"
          type: string
      required:
        - type
        - value
      title: "Text Query"
      type: object
    thumbnail:
      pattern: ^(.*)$
      type: string
    title:
      pattern: ^(.*)$
      type: string
    useLimitation:
      pattern: ^(.*)$
      type: string
    yearFilter:
      additionalProperties: false
      description: "Filter results by before, after, or a date range. Differs from the Datetime Filter in that it handles year values only."
      properties:
        after:
          description: "Beginning of the date range, e.g., look for all results *after* this year."
          multipleOf: 1
          type: number
        before:
          description: "End of the date range, e.g., look for all results *before* this year."
          multipleOf: 1
          type: number
        relation:
          default: intersects
          description: "How the result time range relates to the query time range, e.g., return all datasets whose time range is within the given time range."
          enum:
            - contains
            - disjoint
            - intersects
            - within
        type:
          description: "Filter type."
          enum:
            - year
      required:
        - type
      title: "Year Filter"
      type: object

  examples:
    payload0:
      value:
        queries:
          - type: queryText
            value: climate
        filters: []
        facets: true
        page:
          max: 20
          offset: 0
      summary: basic text query
    payload1:
      value:
        queries:
          - type: queryText
            value: weather
        filters:
          - type: facet
            name: science
            values:
              - Agriculture
              - Atmosphere > Atmospheric Radiation > Incoming Solar Radiation
        facets: true
        page:
          max: 20
          offset: 0
      summary: multiple science theme filters selected
    payload2:
      value:
        queries:
          - type: queryText
            value: weather
        filters:
          - type: facet
            name: science
            values:
              - Agriculture
          - type: facet
            name: instruments
            values:
              - ADCP > Acoustic Doppler Current Profiler
        facets: true
        page:
          max: 20
          offset: 0
      summary: multiple facets selected
    payload3:
      value:
        queries:
          - type: queryText
            value: weather
        filters: []
        facets: false
        page:
          max: 20
          offset: 20
      summary: Next Page request
