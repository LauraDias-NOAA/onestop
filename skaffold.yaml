apiVersion: skaffold/v2beta2
kind: Config

build:
  artifacts:
    #    - image: cedardevs/onestop-indexer
    #      jib:
    #        project: indexer
    #        type: gradle
    #    - image: cedardevs/onestop-registry
    #      jib:
    #        project: registry
    #        type: gradle
    #    - image: cedardevs/onestop-stream-manager
    #      jib:
    #        project: stream-manager
    #        type: gradle
    #    - image: cedardevs/onestop-search
    #      jib:
    #        project: search
    #        type: gradle
    #    - image: cedardevs/onestop-client
    #      jib:
    #        project: client
    #        type: gradle
    - image: cedardevs/onestop-user
      jib:
        project: user
        type: gradle
    - image: cedardevs/onestop-gateway
      jib:
        project: gateway
        type: gradle

.onestop-indexer: &onestop-indexer
  name: onestop-indexer
  chartPath: helm/onestop-indexer
  values:
    image: cedardevs/onestop-indexer
    pullPolicy: Never
  setValues:
    config: |-
      ---
      kafka:
        bootstrap:
          servers: "PLAINTEXT://onestop-dev-cp-kafka:9092"
        schema:
          registry:
            url: "http://onestop-dev-cp-schema-registry:8081"
        commit:
          interval:
            ms: 1000
  imageStrategy:
    helm: {}

.onestop-registry: &onestop-registry
  name: onestop-registry
  chartPath: helm/onestop-registry
  values:
    image: cedardevs/onestop-registry
    pullPolicy: Never
  setValues:
    config: |-
      ---
      logging:
        level:
          org.cedar: DEBUG
          org.cedar.schemas.avro.util: INFO
      server.servlet.context-path: /registry
      kafka.commit.interval: 1000
      topics:
        num-partitions: 2
        replication-factor: 1
      cas:
        prefixUrl: 'http://onestop-dev-cas:8080/cas'
      authorization:
        roles:
          ROLE_ADMIN:
            - casuser
    debug: "false"
    features.cas: "false"
    kafka.bootstrap.servers: PLAINTEXT://onestop-dev-cp-kafka:9092
    kafka.schema.registry.url: http://onestop-dev-cp-schema-registry:8081
    replicaCount: "1"
  imageStrategy:
    helm: {}

.onestop-manager: &onestop-manager
  name: onestop-manager
  chartPath: helm/onestop-manager
  values:
    image: cedardevs/onestop-stream-manager
    pullPolicy: Never
  setValues:
    config: |-
      ---
      logging:
        level:
          org.cedar: DEBUG
          org.cedar.schemas.avro.util: INFO
      kafka.commit.interval: 1000
    kafka.bootstrap.servers: PLAINTEXT://onestop-dev-cp-kafka:9092
    kafka.schema.registry.url: http://onestop-dev-cp-schema-registry:8081
  imageStrategy:
    helm: {}

.onestop-search: &onestop-search
  name: onestop-search
  chartPath: helm/onestop-search
  values:
    image: cedardevs/onestop-search
    pullPolicy: Never
  setValues:
    env.SITEMAP_API_PATH: https://sciapps.colorado.edu/onestop-search
    env.SITEMAP_CLIENT_PATH: https://sciapps.colorado.edu/onestop
    features.login-gov: "false"
    features.sitemap: "true"
    service.nodePort: "30097"
    service.type: NodePort
  imageStrategy:
    helm: {}

.onestop-client: &onestop-client
  name: onestop-client
  chartPath: helm/onestop-client
  values:
    image: cedardevs/onestop-client
    pullPolicy: Never
  setValues:
    apiSearch.endpoint: onestop-search:8080/onestop-search
    prefixPath: onestop
  imageStrategy:
    helm: {}

.onestop-user: &onestop-user
  name: onestop-user
  chartPath: helm/onestop-user
  values:
    image: cedardevs/onestop-user
    pullPolicy: Never
  imageStrategy:
    helm: {}
  setValues:
    debug: "true"
    features.security: "true"
    config: |-
      ---
      logging.level.org.pac4j.springframework.web: DEBUG
      logging.level.org.pac4j.core.engine: DEBUG
      logging.level.org.pac4j.cas: DEBUG

      logingov:
        clientId: "urn:gov:gsa:openidconnect.profiles:sp:sso:noaa:onestop_user_8080"
        discoveryUri: "https://idp.int.identitysandbox.gov/.well-known/openid-configuration"
        scopes: "openid email"
        useNonce: true
        acrValues: "http://idmanagement.gov/ns/assurance/loa/1"

      authorization:
        roles:
          ROLE_PUBLIC:
            - elliott.richerson@noaa.gov

      server.servlet.context-path: /user
      spring:
        datasource:
          url: jdbc:postgresql://onestop-postgresql:5432/user
          username: onestop
          password: foamcat
        jpa:
          database: POSTGRESQL
          show-sql: true
          properties:
            hibernate:
              dialect: org.hibernate.dialect.PostgreSQLDialect
          hibernate:
            ddl-auto: update

.onestop-gateway: &onestop-gateway
  name: onestop-gateway
  chartPath: helm/onestop-gateway
  values:
    image: cedardevs/onestop-gateway
    pullPolicy: Never
  imageStrategy:
    helm: {}
  setValues:
    debug: "false"
    config: |-
      ---
      server.servlet.context-path: /api
      gateway:
        routes:
          user: http://localhost/user
      login-gov:
        keystore:
          alias: ${PRIVATE_KEY_JWT_KEYSTORE_ALIAS}
          file: ${PRIVATE_KEY_JWT_KEYSTORE_FILE}
          password: ${PRIVATE_KEY_JWT_KEYSTORE_PASSWORD}
          type: ${PRIVATE_KEY_JWT_KEYSTORE_TYPE}

.onestop-postgresql: &onestop-postgresql
  name: onestop-postgresql
  chartPath: helm/onestop-postgresql

.onestop-net-tools: &onestop-net-tools
  name: onestop-net-tools
  chartPath: helm/onestop-net-tools

.onestop-ingress: &onestop-ingress
  name: onestop-ingress
  chartPath: helm/onestop-ingress

deploy:
  kubectl:

  helm:
    releases:
      #      - *onestop-indexer
      #      - *onestop-registry
      #      - *onestop-manager
      #      - *onestop-search
      #      - *onestop-client
      - *onestop-user
      - *onestop-gateway
      - name: onestop-dev
        chartPath: helm/onestop-dev

profiles:
  - name: psi
    deploy:
      helm:
        releases:
          - *onestop-manager
          - *onestop-registry
          - name: onestop-dev
            chartPath: helm/onestop-dev
  - name: os
    deploy:
      helm:
        releases:
          - *onestop-search
          - *onestop-client
          - name: onestop-dev
            chartPath: helm/onestop-dev
            setValues:
              cp-kafka.enabled: "false"
              cp-schema-registry.enabled: "false"
              cp-zookeeper.enabled: "false"
  - name: user
    deploy:
      helm:
        releases:
          - *onestop-gateway
          - *onestop-user
          - *onestop-ingress
          - *onestop-postgresql
          - *onestop-net-tools