apiVersion: skaffold/v2beta1
kind: Config
build:
  artifacts:
    - image: cedardevs/onestop-indexer
      jib:
        project: indexer
        type: gradle
    - image: cedardevs/onestop-registry
      jib:
        project: registry
        type: gradle
    - image: cedardevs/onestop-stream-manager
      jib:
        project: stream-manager
        type: gradle
    - image: cedardevs/onestop-search
      jib:
        project: search
        type: gradle
    - image: cedardevs/onestop-client
      jib:
        project: client
        type: gradle
deploy:
  kubectl:

  helm:
    releases:
      - name: onestop-indexer
        chartPath: helm/onestop-indexer
        values:
          image: cedardevs/onestop-indexer
        setValues:
          config: |-
            ---
            kafka:
              bootstrap:
                servers: "PLAINTEXT://onestop-dev-cp-kafka:9092"
              schema:
                registry:
                  url: "http://onestop-dev-cp-schema-registry:8081"
              commit:
                interval:
                  ms: 1000
        imageStrategy:
          helm: {}
      - name: onestop-registry
        chartPath: helm/onestop-registry
        values:
          image: cedardevs/onestop-registry
        setValues:
          config: |-
            ---
            logging:
              level:
                org.cedar: DEBUG
                org.cedar.schemas.avro.util: INFO
            kafka.commit.interval: 1000
            topics:
              num-partitions: 2
              replication-factor: 1
            cas:
              prefixUrl: 'http://onestop-dev-cas:8080/cas'
            authorization:
              roles:
                ROLE_ADMIN:
                  - casuser
          debug: "false"
          features.cas: "false"
          kafka.bootstrap.servers: PLAINTEXT://onestop-dev-cp-kafka:9092
          kafka.schema.registry.url: http://onestop-dev-cp-schema-registry:8081
          replicaCount: "1"
          service.clusterIP: 10.100.100.1
        imageStrategy:
          helm: {}
      - name: onestop-manager
        chartPath: helm/onestop-manager
        values:
          image: cedardevs/onestop-stream-manager
        setValues:
          config: |-
            ---
            logging:
              level:
                org.cedar: DEBUG
                org.cedar.schemas.avro.util: INFO
            kafka.commit.interval: 1000
          kafka.bootstrap.servers: PLAINTEXT://onestop-dev-cp-kafka:9092
          kafka.schema.registry.url: http://onestop-dev-cp-schema-registry:8081
        imageStrategy:
          helm: {}
      - name: onestop-search
        chartPath: helm/onestop-search
        values:
          image: cedardevs/onestop-search
        setValues:
          env.SITEMAP_API_PATH: https://sciapps.colorado.edu/onestop-search
          env.SITEMAP_CLIENT_PATH: https://sciapps.colorado.edu/onestop
          features.login-gov: "false"
          features.sitemap: "true"
          service.nodePort: "30097"
          service.type: NodePort
          service.clusterIP: 10.100.100.2
        imageStrategy:
          helm: {}
      - name: onestop-client
        chartPath: helm/onestop-client
        values:
          image: cedardevs/onestop-client
        setValues:
          prefixPath: onestop
          service.clusterIP: 10.100.100.3
        imageStrategy:
          helm: {}
      - name: onestop-dev
        chartPath: helm/onestop-dev
profiles:
  - name: psi
    deploy:
      helm:
        releases:
          - name: onestop-manager
            chartPath: helm/onestop-manager
            values:
              image: cedardevs/onestop-stream-manager
            setValues:
              config: |-
                ---
                logging:
                  level:
                    org.cedar: DEBUG
                    org.cedar.schemas.avro.util: INFO
                kafka.commit.interval: 1000
              kafka.bootstrap.servers: PLAINTEXT://onestop-dev-cp-kafka:9092
              kafka.schema.registry.url: http://onestop-dev-cp-schema-registry:8081
            imageStrategy:
              helm: {}
          - name: onestop-registry
            chartPath: helm/onestop-registry
            values:
              image: cedardevs/onestop-registry
            setValues:
              config: |-
                ---
                logging:
                  level:
                    org.cedar: DEBUG
                    org.cedar.schemas.avro.util: INFO
                kafka.commit.interval: 1000
                topics:
                  num-partitions: 2
                  replication-factor: 1
                cas:
                  prefixUrl: 'http://onestop-dev-cas:8080/cas'
                authorization:
                  roles:
                    ROLE_ADMIN:
                      - casuser
              debug: "false"
              features.cas: "false"
              kafka.bootstrap.servers: PLAINTEXT://onestop-dev-cp-kafka:9092
              kafka.schema.registry.url: http://onestop-dev-cp-schema-registry:8081
              replicaCount: "1"
            imageStrategy:
              helm: {}
          - name: onestop-dev
            chartPath: helm/onestop-dev
  - name: os
    deploy:
      helm:
        releases:
          - name: onestop-search
            chartPath: helm/onestop-search
            values:
              image: cedardevs/onestop-search
            setValues:
              env.SITEMAP_API_PATH: https://sciapps.colorado.edu/onestop-search
              env.SITEMAP_CLIENT_PATH: https://sciapps.colorado.edu/onestop
              features.login-gov: "false"
              features.sitemap: "true"
              service.nodePort: "30097"
              service.type: NodePort
            imageStrategy:
              helm: {}
          - name: onestop-client
            chartPath: helm/onestop-client
            values:
              image: cedardevs/onestop-client
            setValues:
              prefixPath: onestop
            imageStrategy:
              helm: {}
          - name: onestop-dev
            chartPath: helm/onestop-dev
            setValues:
              cp-kafka.enabled: "false"
              cp-schema-registry.enabled: "false"
              cp-zookeeper.enabled: "false"
