apiVersion: skaffold/v2beta1
kind: Config

.onestop-indexer: &onestop-indexer
  name: onestop-indexer
  chartPath: helm/onestop-indexer
  values:
    image: cedardevs/onestop-indexer
  setValues:
    config: |-
      ---
      kafka:
        bootstrap:
          servers: "PLAINTEXT://onestop-dev-cp-kafka:9092"
        schema:
          registry:
            url: "http://onestop-dev-cp-schema-registry:8081"
        commit:
          interval:
            ms: 1000
  imageStrategy:
    helm: {}

.onestop-registry: &onestop-registry
  name: onestop-registry
  chartPath: helm/onestop-registry
  values:
    image: cedardevs/onestop-registry
  setValues:
    config: |-
      ---
      logging:
        level:
          org.cedar: DEBUG
          org.cedar.schemas.avro.util: INFO
      server.servlet.context-path: /registry
      kafka.commit.interval: 1000
      topics:
        num-partitions: 2
        replication-factor: 1
      cas:
        prefixUrl: 'http://onestop-dev-cas:8080/cas'
      authorization:
        roles:
          ROLE_ADMIN:
            - casuser
    debug: "false"
    features.cas: "false"
    kafka.bootstrap.servers: PLAINTEXT://onestop-dev-cp-kafka:9092
    kafka.schema.registry.url: http://onestop-dev-cp-schema-registry:8081
    replicaCount: "1"
  imageStrategy:
    helm: {}

.onestop-manager: &onestop-manager
  name: onestop-manager
  chartPath: helm/onestop-manager
  values:
    image: cedardevs/onestop-stream-manager
  setValues:
    config: |-
      ---
      logging:
        level:
          org.cedar: DEBUG
          org.cedar.schemas.avro.util: INFO
      kafka.commit.interval: 1000
    kafka.bootstrap.servers: PLAINTEXT://onestop-dev-cp-kafka:9092
    kafka.schema.registry.url: http://onestop-dev-cp-schema-registry:8081
  imageStrategy:
    helm: {}

.onestop-search: &onestop-search
  name: onestop-search
  chartPath: helm/onestop-search
  values:
    image: cedardevs/onestop-search
  setValues:
    env.SITEMAP_API_PATH: https://sciapps.colorado.edu/onestop-search
    env.SITEMAP_CLIENT_PATH: https://sciapps.colorado.edu/onestop
    features.login-gov: "false"
    features.sitemap: "true"
    service.nodePort: "30097"
    service.type: NodePort
  imageStrategy:
    helm: {}

.onestop-client: &onestop-client
  name: onestop-client
  chartPath: helm/onestop-client
  values:
    image: cedardevs/onestop-client
  setValues:
    apiSearch.endpoint: onestop-search:8080/onestop-search
    prefixPath: onestop
  imageStrategy:
    helm: {}

.onestop-user: &onestop-user
  name: onestop-user
  chartPath: helm/onestop-user
  values:
    # skaffold may not build/deploy w/the latest if this is not set here
    image: cedardevs/onestop-user
  imageStrategy:
    helm: {}
  setValues:
    features.logingov: "false"
    config: |-
      ---
      server.servlet.context-path: /user
      spring:
        datasource:
          url: jdbc:postgresql://onestop-dev-postgresql:5432/user
          username: onestop
          password: foamcat
        jpa:
          database: POSTGRESQL
          show-sql: true
          properties:
            hibernate:
              dialect: org.hibernate.dialect.PostgreSQLDialect
          hibernate:
            ddl-auto: update

build:
  artifacts:
#    - image: cedardevs/onestop-indexer
#      jib:
#        project: indexer
#        type: gradle
#    - image: cedardevs/onestop-registry
#      jib:
#        project: registry
#        type: gradle
#    - image: cedardevs/onestop-stream-manager
#      jib:
#        project: stream-manager
#        type: gradle
#    - image: cedardevs/onestop-search
#      jib:
#        project: search
#        type: gradle
#    - image: cedardevs/onestop-client
#      jib:
#        project: client
#        type: gradle
    - image: cedardevs/onestop-user
      jib:
        project: user
        type: gradle
deploy:
  kubectl:

  helm:
    releases:
#      - *onestop-indexer
#      - *onestop-registry
#      - *onestop-manager
#      - *onestop-search
#      - *onestop-client
      - *onestop-user
      - name: onestop-dev
        chartPath: helm/onestop-dev

profiles:
  - name: psi
    deploy:
      helm:
        releases:
          - *onestop-manager
          - *onestop-registry
          - name: onestop-dev
            chartPath: helm/onestop-dev
  - name: os
    deploy:
      helm:
        releases:
          - *onestop-search
          - *onestop-client
          - name: onestop-dev
            chartPath: helm/onestop-dev
            setValues:
              cp-kafka.enabled: "false"
              cp-schema-registry.enabled: "false"
              cp-zookeeper.enabled: "false"
  - name: user
    deploy:
      helm:
        releases:
          - *onestop-user
